#!/bin/bash
<% require 'shellwords' %>
set -u
set -e

# Some utility functions.
fail() { echo >&2 "$@"; exit 1; }
warn() { echo >&2 "$@"; }
cmd() { hash "$1" >&/dev/null; } # portable 'which'

exists() {
  if command -v $1 &>/dev/null
  then
    return 0
  else
    return 1
  fi
}

<% unless broker.empty? %>
install_sh="<%= broker.install_sh %>"
version_string="<%= broker.version_string %>"
if ! exists /usr/bin/chef-client; then
  if exists wget; then
    bash <(wget ${install_sh} -O -) -v ${version_string}
  elif exists curl; then
    bash <(curl -L ${install_sh}) -v ${version_string}
  else
    echo ">> wget or curl must be installed, bootstrap failed"
    exit 1
  fi
fi

mkdir -p /etc/chef

prefix="-----BEGIN RSA PRIVATE KEY-----"
postfix="-----END RSA PRIVATE KEY-----"
stringz=<%= broker.validation_key %>
stringz=${stringz#$prefix}
stringz=${stringz%$postfix}
rsa_key=""
rsa_key=${prefix}
for ((i=0; i<${#stringz}; i=i+64)) 
do
	rsa_key=$rsa_key$'\n'${stringz:$i:64}
done
rsa_key=$rsa_key$'\n'${postfix}
printf '%s\n' "$rsa_key" >> /etc/chef/validation.pem
# write validation key and ensure file ends with a newline
# (
# cat << $rsa_key
# ) | awk NF > /etc/chef/validation.pem
# chmod 0600 /etc/chef/validation.pem

(
cat <<'EOP'
	node_name "<%= node.hostname %>"
	log_level :info
	log_location STDOUT
	chef_server_url "<%= broker.chef_server_url %>"
	validation_client_name "<%= broker.validation_client_name %>"
EOP
) > /etc/chef/client.rb

(
cat <<'EOFFIRSTRUN'
{
	"run_list": <%= broker.run_list.split(/\s*,\s*/) %>,
	"razor_metadata":  {
<%
unless node.metadata.empty?
	metadata_pair_json=''
	node.metadata.each do |metadata_pair|
		metadata_pair_json << "\"#{metadata_pair[0]}\" : \"#{metadata_pair[1]}\",\n"
	end
	metadata_pair_json.gsub!(/,\n$/, '')
%>
		<%= metadata_pair_json %>
<% end %>
	}
}
EOFFIRSTRUN
) > /etc/chef/first-boot.json

<%= broker.chef_client %> -j /etc/chef/first-boot.json -E <%= broker.environment %>

# <% end %>

# Log that the broker is finished.
if cmd curl; then
	curl -sL "<%= stage_done_url %>" || fail "curl failed to log broker completion"
elif cmd wget; then
	wget -qO- "<%= stage_done_url %>" || fail "wget failed to log broker completion" &> /dev/null
else
	warn "neither curl nor wget installed; cannot log completion of broker"
fi