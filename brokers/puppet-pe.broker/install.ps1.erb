# -*- powershell -*-
write-host "Razor Windows broker script starting"
$ErrorActionPreference = "Continue"
$error.clear()

if ((Get-WmiObject -Class Win32_OperatingSystem | Select-Object -ExpandProperty OSArchitecture) -match '64') {
    $arch = 'x64'
} else {
    $arch = 'x86'
}
$version = "<%= (broker[:version] || 'latest') %>"
$master = "<%= (broker[:server] || 'puppet') %>"
$installer = "<%= (broker[:windows_agent_download_url] || 'https://pm.puppetlabs.com/cgi-bin/download.cgi?ver=${version}&dist=win&arch=${arch}') %>"

write-host "downloading MSI file to install PE agent from $installer"
$installer_dest = "${ENV:TEMP}\puppet.msi"
(New-Object System.Net.WebClient).DownloadFile($installer, $installer_dest)
if($error.Count) {
    write-host "failed to download puppet agent installer: $error"
    $error_url = "<%= log_url('failed to download puppet agent installer', :error) %>"
    (new-object System.Net.WebClient).DownloadString($error_url)
    Exit 1
}

write-host "starting PE installer"
$log_dest = "${ENV:TEMP}\puppet.log"
$installer_args = @('/qn', "PUPPET_MASTER_SERVER=$master", "/l*v `"$log_dest`"")

write-host "running $installer_dest $installer_args"
Start-Process -File $installer_dest -Arg $installer_args -Passthru | Wait-Process
if($error.Count) {
    write-host "failed to run puppet agent installer: $error"
    $error_url = "<%= log_url('failed to run puppet agent installer', :error) %>"
    (New-Object System.Net.WebClient).DownloadString($error_url)
    Exit 1
}

write-host "notify Razor that the broker completed"
(New-Object System.Net.WebClient).DownloadString('<%= stage_done_url %>')
if($error.Count) {
    write-host 'failed to tell Razor that the broker completed'
}
