# This is a configuration that shows how to set up Shiro to use any JDBC
# accessible database to back the authentication component of Razor.
#
# Warning: this is not extensively tested.  Bug reports are welcome, but
# please include details about the failures involved to make it easier to make
# this robust.
#
# See the Shiro documentation at http://shiro.apache.org/documentation.html
# for more details on how to configure and use Shiro.
[main]
# First, create a data source to point into our authentication database
psql                     = org.postgresql.ds.PGPoolingDataSource
psql.dataSourceName    = "Shiro PG Pool"
psql.initialConnections = 1
psql.maxConnections     = 6
psql.serverName         = psql.example.com
# 0 is the default port
psql.portNumber         = 0
psql.databaseName       = shiroauthexample
psql.user                = dbrole
psql.password            = toomEmvogPedilm3

# Next, configure Shiro to use that to extract credentials
realm             = org.apache.shiro.realm.jdbc.JdbcRealm
realm.dataSource = $datasource
realm.permissionsLookupEnabled = true
realm.saltStyle  = realm.SaltStyle.CRYPT

# It is also possible to configure custom queries; the default schema can be
# found in the Shiro documentation and source code, but you can supply
# arbitrary SQL queries.  These reflect the default values for this example:
realm.authenticationQuery = "select password from users where username = ?"
realm.permissionsQuery    = "select rolename from userroles where username = ?"
realm.userRolesQuery      = "select permission from rolespermissions where rolename = ?"
